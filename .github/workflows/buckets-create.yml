name: Create test bucket

on:
  pull_request:
      types: [ opened, reopened ]

jobs:
  create-bucket:
    runs-on: ['self-hosted', 'multivac-crawler']
    strategy:
      matrix:
        label: ['tests', 'workflows', 'table']
    env:
        INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN }}
        INFLUX_ORG: ${{ secrets.INFLUX_ORG_ID }}
        INFLUX_URL: ${{ secrets.INFLUX_URL }}
        BUCKET_BASE: '${{ github.head_ref }}-${{ matrix.label }}'

    steps:
      - uses: actions/checkout@v3
      - name: Get bucket name (strip username)
        if: always()
        run: |
          echo 'BUCKET_NAME<<EOF' >> $GITHUB_ENV
            echo ${BUCKET_BASE} | sed -r 's/^.*\/(.*)/\1/' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Create bucket
        if: always()
        run: |
          # expire in 30 days
          echo 'ARTIFACT_NAME<<EOF' >> $GITHUB_ENV
          curl --request POST \
            "https://influxdb.tarantool.io/api/v2/buckets" \
            --header "Authorization: Token ${INFLUX_TOKEN}" \
            --header "Content-type: application/json" \
            --data '{
              "orgID": "'"${INFLUX_ORG}"'",
              "name": "${{ env.BUCKET_NAME }}",
              "retentionRules": [
                {
                  "type": "expire",
                  "everySeconds": 2592000,
                  "shardGroupDurationSeconds": 0
                }
              ]
            }' | jq '.id' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Save bucket ID
        if: always()
        run: |
          if [[ ${{ env.ARTIFACT_NAME }} ]]; then
            echo ${{ env.ARTIFACT_NAME }} > ${{ env.BUCKET_NAME }}-id
          else
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUCKET_NAME }}-id
          path: ${{ env.BUCKET_NAME }}-id

  fill-bucket:
    runs-on: ['self-hosted', 'multivac-crawler']
    needs: create-bucket
    steps:
      - name: Fill the bucket
        uses: ./.github/actions/write_to_db
        with:
          influx_token: ${{ secrets.INFLUX_TOKEN }}
          influx_url: ${{ secrets.INFLUX_URL }}

